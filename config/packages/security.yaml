security:
    encoders:
        App\Entity\Customer:
            algorithm: bcrypt
        App\Entity\Admin:
            algorithm: bcrypt

    providers:
        chain_provider:
            chain:
                providers: [customer_db, admin_db]
        customer_db:
            entity: { class: App\Entity\Customer, property: username }
        admin_db:
            entity: { class: App\Entity\Admin, property: username }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                provider: chain_provider
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                
        api:
            pattern:  ^/api
            stateless: true
            anonymous: false
            provider: chain_provider
            guard:
                authenticators:
                - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
    - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/register, roles: ROLE_ADMIN }
    - { path: ^/api/product, roles: ROLE_ADMIN, methods: [POST, PATCH, DELETE] }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }